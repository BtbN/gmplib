# Makefile.in generated by automake 1.7.2 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
#
# This file is part of the GNU MP Library.
#
# The GNU MP Library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Library General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# The GNU MP Library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
# License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with the GNU MP Library; see the file COPYING.LIB.  If not, write to
# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
# MA 02111-1307, USA.

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@
ABI = @ABI@
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BITS_PER_MP_LIMB = @BITS_PER_MP_LIMB@
CALLING_CONVENTIONS_OBJS = @CALLING_CONVENTIONS_OBJS@
CC = @CC@
CCAS = @CCAS@
CC_FOR_BUILD = @CC_FOR_BUILD@
CFLAGS = @MPFR_CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CPP_FOR_BUILD = @CPP_FOR_BUILD@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFN_LONG_LONG_LIMB = @DEFN_LONG_LONG_LIMB@
DEFS = @DEFS@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_STATIC_FALSE = @ENABLE_STATIC_FALSE@
ENABLE_STATIC_TRUE = @ENABLE_STATIC_TRUE@
EXEEXT = @EXEEXT@
EXEEXT_FOR_BUILD = @EXEEXT_FOR_BUILD@
GMP_LDFLAGS = @GMP_LDFLAGS@
GMP_NAIL_BITS = @GMP_NAIL_BITS@
HAVE_CLOCK_01 = @HAVE_CLOCK_01@
HAVE_CPUTIME_01 = @HAVE_CPUTIME_01@
HAVE_DECL_OPTARG = @HAVE_DECL_OPTARG@
HAVE_GETRUSAGE_01 = @HAVE_GETRUSAGE_01@
HAVE_GETTIMEOFDAY_01 = @HAVE_GETTIMEOFDAY_01@
HAVE_HOST_CPU_FAMILY_power = @HAVE_HOST_CPU_FAMILY_power@
HAVE_HOST_CPU_FAMILY_powerpc = @HAVE_HOST_CPU_FAMILY_powerpc@
HAVE_MPFR_01 = @HAVE_MPFR_01@
HAVE_SIGACTION_01 = @HAVE_SIGACTION_01@
HAVE_SIGALTSTACK_01 = @HAVE_SIGALTSTACK_01@
HAVE_SIGSTACK_01 = @HAVE_SIGSTACK_01@
HAVE_STACK_T_01 = @HAVE_STACK_T_01@
HAVE_SYS_RESOURCE_H_01 = @HAVE_SYS_RESOURCE_H_01@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBGMP_DLL = @LIBGMP_DLL@
LIBM = @LIBM@
LIBM_FOR_BUILD = @LIBM_FOR_BUILD@
LIBOBJS = @LIBOBJS@
LIBREADLINE = @LIBREADLINE@
LIBS = @MPFR_LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
M4 = @M4@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MPFR_CFLAGS = @MPFR_CFLAGS@
MPFR_LIBM = @MPFR_LIBM@
MPFR_LIBS = @MPFR_LIBS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SPEED_CYCLECOUNTER_OBJ = @SPEED_CYCLECOUNTER_OBJ@
STRIP = @STRIP@
TAL_OBJECT = @TAL_OBJECT@
TESTS_ASM_OBJECTS = @TESTS_ASM_OBJECTS@
TUNE_SQR_OBJ = @TUNE_SQR_OBJ@
U = @U@
U_FOR_BUILD = @U_FOR_BUILD@
VERSION = @VERSION@
WANT_CXX_FALSE = @WANT_CXX_FALSE@
WANT_CXX_TRUE = @WANT_CXX_TRUE@
WANT_MPBSD_FALSE = @WANT_MPBSD_FALSE@
WANT_MPBSD_TRUE = @WANT_MPBSD_TRUE@
WANT_MPFR_FALSE = @WANT_MPFR_FALSE@
WANT_MPFR_TRUE = @WANT_MPFR_TRUE@
WITH_READLINE_01 = @WITH_READLINE_01@
YACC = @YACC@
ac_ct_AR = @ac_ct_AR@
ac_ct_AS = @ac_ct_AS@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DLLTOOL = @ac_ct_DLLTOOL@
ac_ct_OBJDUMP = @ac_ct_OBJDUMP@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
gmp_srclinks = @gmp_srclinks@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mpn_objects = @mpn_objects@
mpn_objs_in_libgmp = @mpn_objs_in_libgmp@
mpn_objs_in_libmp = @mpn_objs_in_libmp@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@

INCLUDES = -I$(top_srcdir) -I$(top_srcdir)/mpfr

LDADD = libfrtests.a $(MPFR_LIBM) ../libmpfr.a $(top_builddir)/libgmp.la

libfrtests_a_SOURCES = memory.c rnd_mode.c tests.c
EXTRA_libfrtests_a_SOURCES = x86.asm
libfrtests_a_DEPENDENCIES = $(TESTS_ASM_OBJECTS)
libfrtests_a_LIBADD = $(libfrtests_a_DEPENDENCIES)

@WANT_MPFR_TRUE@check_PROGRAMS = reuse tabs tadd tagm tcan_round tcmp tcmp2 tcmp_ui tdiv tdiv_ui teq texp tfrac tget_str tlog tconst_log2 tmul tmul_2exp tmul_ui tout_str tconst_pi tpow trandom tround_prec tset_d tset_f tset_q tset_si tset_str tset_z tsqrt tsqrt_ui tui_div tui_sub tswap ttrunc trint tisnan tget_d tatan tcosh tsinh ttanh tacosh tasinh tatanh thyperbolic texp2 tfactorial tsub tasin tconst_euler tcos tsin ttan tsub_ui tset tlog1p texpm1 tlog2 tlog10 tui_pow tpow3 tadd_ui texceptions tfma thypot tacos tgamma tset_ld tcbrt tsin_cos mpf_compat mpfr_compat tzeta tcmp_d terf
@WANT_MPFR_TRUE@check_LIBRARIES = libfrtests.a
@WANT_MPFR_TRUE@TESTS = $(check_PROGRAMS)
EXTRA_DIST = tgeneric.c mpf_compat.h

# This $(srcdir) and $(CYGPATH_W) stuff follows automake 1.7.2
SUFFIXES = .asm
subdir = mpfr/tests
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
libfrtests_a_AR = $(AR) cru
am_libfrtests_a_OBJECTS = memory$U.$(OBJEXT) rnd_mode$U.$(OBJEXT) \
	tests$U.$(OBJEXT)
libfrtests_a_OBJECTS = $(am_libfrtests_a_OBJECTS)
@WANT_MPFR_TRUE@check_PROGRAMS = reuse$(EXEEXT) tabs$(EXEEXT) \
@WANT_MPFR_TRUE@	tadd$(EXEEXT) tagm$(EXEEXT) tcan_round$(EXEEXT) \
@WANT_MPFR_TRUE@	tcmp$(EXEEXT) tcmp2$(EXEEXT) tcmp_ui$(EXEEXT) \
@WANT_MPFR_TRUE@	tdiv$(EXEEXT) tdiv_ui$(EXEEXT) teq$(EXEEXT) \
@WANT_MPFR_TRUE@	texp$(EXEEXT) tfrac$(EXEEXT) tget_str$(EXEEXT) \
@WANT_MPFR_TRUE@	tlog$(EXEEXT) tconst_log2$(EXEEXT) \
@WANT_MPFR_TRUE@	tmul$(EXEEXT) tmul_2exp$(EXEEXT) \
@WANT_MPFR_TRUE@	tmul_ui$(EXEEXT) tout_str$(EXEEXT) \
@WANT_MPFR_TRUE@	tconst_pi$(EXEEXT) tpow$(EXEEXT) \
@WANT_MPFR_TRUE@	trandom$(EXEEXT) tround_prec$(EXEEXT) \
@WANT_MPFR_TRUE@	tset_d$(EXEEXT) tset_f$(EXEEXT) tset_q$(EXEEXT) \
@WANT_MPFR_TRUE@	tset_si$(EXEEXT) tset_str$(EXEEXT) \
@WANT_MPFR_TRUE@	tset_z$(EXEEXT) tsqrt$(EXEEXT) \
@WANT_MPFR_TRUE@	tsqrt_ui$(EXEEXT) tui_div$(EXEEXT) \
@WANT_MPFR_TRUE@	tui_sub$(EXEEXT) tswap$(EXEEXT) ttrunc$(EXEEXT) \
@WANT_MPFR_TRUE@	trint$(EXEEXT) tisnan$(EXEEXT) tget_d$(EXEEXT) \
@WANT_MPFR_TRUE@	tatan$(EXEEXT) tcosh$(EXEEXT) tsinh$(EXEEXT) \
@WANT_MPFR_TRUE@	ttanh$(EXEEXT) tacosh$(EXEEXT) tasinh$(EXEEXT) \
@WANT_MPFR_TRUE@	tatanh$(EXEEXT) thyperbolic$(EXEEXT) \
@WANT_MPFR_TRUE@	texp2$(EXEEXT) tfactorial$(EXEEXT) \
@WANT_MPFR_TRUE@	tsub$(EXEEXT) tasin$(EXEEXT) \
@WANT_MPFR_TRUE@	tconst_euler$(EXEEXT) tcos$(EXEEXT) \
@WANT_MPFR_TRUE@	tsin$(EXEEXT) ttan$(EXEEXT) tsub_ui$(EXEEXT) \
@WANT_MPFR_TRUE@	tset$(EXEEXT) tlog1p$(EXEEXT) texpm1$(EXEEXT) \
@WANT_MPFR_TRUE@	tlog2$(EXEEXT) tlog10$(EXEEXT) tui_pow$(EXEEXT) \
@WANT_MPFR_TRUE@	tpow3$(EXEEXT) tadd_ui$(EXEEXT) \
@WANT_MPFR_TRUE@	texceptions$(EXEEXT) tfma$(EXEEXT) \
@WANT_MPFR_TRUE@	thypot$(EXEEXT) tacos$(EXEEXT) tgamma$(EXEEXT) \
@WANT_MPFR_TRUE@	tset_ld$(EXEEXT) tcbrt$(EXEEXT) \
@WANT_MPFR_TRUE@	tsin_cos$(EXEEXT) mpf_compat$(EXEEXT) \
@WANT_MPFR_TRUE@	mpfr_compat$(EXEEXT) tzeta$(EXEEXT) \
@WANT_MPFR_TRUE@	tcmp_d$(EXEEXT) terf$(EXEEXT)
@WANT_MPFR_FALSE@check_PROGRAMS =
mpf_compat_SOURCES = mpf_compat.c
mpf_compat_OBJECTS = mpf_compat$U.$(OBJEXT)
mpf_compat_LDADD = $(LDADD)
mpf_compat_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
mpf_compat_LDFLAGS =
mpfr_compat_SOURCES = mpfr_compat.c
mpfr_compat_OBJECTS = mpfr_compat$U.$(OBJEXT)
mpfr_compat_LDADD = $(LDADD)
mpfr_compat_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
mpfr_compat_LDFLAGS =
reuse_SOURCES = reuse.c
reuse_OBJECTS = reuse$U.$(OBJEXT)
reuse_LDADD = $(LDADD)
reuse_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
reuse_LDFLAGS =
tabs_SOURCES = tabs.c
tabs_OBJECTS = tabs$U.$(OBJEXT)
tabs_LDADD = $(LDADD)
tabs_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tabs_LDFLAGS =
tacos_SOURCES = tacos.c
tacos_OBJECTS = tacos$U.$(OBJEXT)
tacos_LDADD = $(LDADD)
tacos_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tacos_LDFLAGS =
tacosh_SOURCES = tacosh.c
tacosh_OBJECTS = tacosh$U.$(OBJEXT)
tacosh_LDADD = $(LDADD)
tacosh_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tacosh_LDFLAGS =
tadd_SOURCES = tadd.c
tadd_OBJECTS = tadd$U.$(OBJEXT)
tadd_LDADD = $(LDADD)
tadd_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tadd_LDFLAGS =
tadd_ui_SOURCES = tadd_ui.c
tadd_ui_OBJECTS = tadd_ui$U.$(OBJEXT)
tadd_ui_LDADD = $(LDADD)
tadd_ui_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tadd_ui_LDFLAGS =
tagm_SOURCES = tagm.c
tagm_OBJECTS = tagm$U.$(OBJEXT)
tagm_LDADD = $(LDADD)
tagm_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tagm_LDFLAGS =
tasin_SOURCES = tasin.c
tasin_OBJECTS = tasin$U.$(OBJEXT)
tasin_LDADD = $(LDADD)
tasin_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tasin_LDFLAGS =
tasinh_SOURCES = tasinh.c
tasinh_OBJECTS = tasinh$U.$(OBJEXT)
tasinh_LDADD = $(LDADD)
tasinh_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tasinh_LDFLAGS =
tatan_SOURCES = tatan.c
tatan_OBJECTS = tatan$U.$(OBJEXT)
tatan_LDADD = $(LDADD)
tatan_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tatan_LDFLAGS =
tatanh_SOURCES = tatanh.c
tatanh_OBJECTS = tatanh$U.$(OBJEXT)
tatanh_LDADD = $(LDADD)
tatanh_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tatanh_LDFLAGS =
tcan_round_SOURCES = tcan_round.c
tcan_round_OBJECTS = tcan_round$U.$(OBJEXT)
tcan_round_LDADD = $(LDADD)
tcan_round_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tcan_round_LDFLAGS =
tcbrt_SOURCES = tcbrt.c
tcbrt_OBJECTS = tcbrt$U.$(OBJEXT)
tcbrt_LDADD = $(LDADD)
tcbrt_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tcbrt_LDFLAGS =
tcmp_SOURCES = tcmp.c
tcmp_OBJECTS = tcmp$U.$(OBJEXT)
tcmp_LDADD = $(LDADD)
tcmp_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tcmp_LDFLAGS =
tcmp2_SOURCES = tcmp2.c
tcmp2_OBJECTS = tcmp2$U.$(OBJEXT)
tcmp2_LDADD = $(LDADD)
tcmp2_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tcmp2_LDFLAGS =
tcmp_d_SOURCES = tcmp_d.c
tcmp_d_OBJECTS = tcmp_d$U.$(OBJEXT)
tcmp_d_LDADD = $(LDADD)
tcmp_d_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tcmp_d_LDFLAGS =
tcmp_ui_SOURCES = tcmp_ui.c
tcmp_ui_OBJECTS = tcmp_ui$U.$(OBJEXT)
tcmp_ui_LDADD = $(LDADD)
tcmp_ui_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tcmp_ui_LDFLAGS =
tconst_euler_SOURCES = tconst_euler.c
tconst_euler_OBJECTS = tconst_euler$U.$(OBJEXT)
tconst_euler_LDADD = $(LDADD)
tconst_euler_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tconst_euler_LDFLAGS =
tconst_log2_SOURCES = tconst_log2.c
tconst_log2_OBJECTS = tconst_log2$U.$(OBJEXT)
tconst_log2_LDADD = $(LDADD)
tconst_log2_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tconst_log2_LDFLAGS =
tconst_pi_SOURCES = tconst_pi.c
tconst_pi_OBJECTS = tconst_pi$U.$(OBJEXT)
tconst_pi_LDADD = $(LDADD)
tconst_pi_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tconst_pi_LDFLAGS =
tcos_SOURCES = tcos.c
tcos_OBJECTS = tcos$U.$(OBJEXT)
tcos_LDADD = $(LDADD)
tcos_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tcos_LDFLAGS =
tcosh_SOURCES = tcosh.c
tcosh_OBJECTS = tcosh$U.$(OBJEXT)
tcosh_LDADD = $(LDADD)
tcosh_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tcosh_LDFLAGS =
tdiv_SOURCES = tdiv.c
tdiv_OBJECTS = tdiv$U.$(OBJEXT)
tdiv_LDADD = $(LDADD)
tdiv_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tdiv_LDFLAGS =
tdiv_ui_SOURCES = tdiv_ui.c
tdiv_ui_OBJECTS = tdiv_ui$U.$(OBJEXT)
tdiv_ui_LDADD = $(LDADD)
tdiv_ui_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tdiv_ui_LDFLAGS =
teq_SOURCES = teq.c
teq_OBJECTS = teq$U.$(OBJEXT)
teq_LDADD = $(LDADD)
teq_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
teq_LDFLAGS =
terf_SOURCES = terf.c
terf_OBJECTS = terf$U.$(OBJEXT)
terf_LDADD = $(LDADD)
terf_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
terf_LDFLAGS =
texceptions_SOURCES = texceptions.c
texceptions_OBJECTS = texceptions$U.$(OBJEXT)
texceptions_LDADD = $(LDADD)
texceptions_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
texceptions_LDFLAGS =
texp_SOURCES = texp.c
texp_OBJECTS = texp$U.$(OBJEXT)
texp_LDADD = $(LDADD)
texp_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
texp_LDFLAGS =
texp2_SOURCES = texp2.c
texp2_OBJECTS = texp2$U.$(OBJEXT)
texp2_LDADD = $(LDADD)
texp2_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
texp2_LDFLAGS =
texpm1_SOURCES = texpm1.c
texpm1_OBJECTS = texpm1$U.$(OBJEXT)
texpm1_LDADD = $(LDADD)
texpm1_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
texpm1_LDFLAGS =
tfactorial_SOURCES = tfactorial.c
tfactorial_OBJECTS = tfactorial$U.$(OBJEXT)
tfactorial_LDADD = $(LDADD)
tfactorial_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tfactorial_LDFLAGS =
tfma_SOURCES = tfma.c
tfma_OBJECTS = tfma$U.$(OBJEXT)
tfma_LDADD = $(LDADD)
tfma_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tfma_LDFLAGS =
tfrac_SOURCES = tfrac.c
tfrac_OBJECTS = tfrac$U.$(OBJEXT)
tfrac_LDADD = $(LDADD)
tfrac_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tfrac_LDFLAGS =
tgamma_SOURCES = tgamma.c
tgamma_OBJECTS = tgamma$U.$(OBJEXT)
tgamma_LDADD = $(LDADD)
tgamma_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tgamma_LDFLAGS =
tget_d_SOURCES = tget_d.c
tget_d_OBJECTS = tget_d$U.$(OBJEXT)
tget_d_LDADD = $(LDADD)
tget_d_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tget_d_LDFLAGS =
tget_str_SOURCES = tget_str.c
tget_str_OBJECTS = tget_str$U.$(OBJEXT)
tget_str_LDADD = $(LDADD)
tget_str_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tget_str_LDFLAGS =
thyperbolic_SOURCES = thyperbolic.c
thyperbolic_OBJECTS = thyperbolic$U.$(OBJEXT)
thyperbolic_LDADD = $(LDADD)
thyperbolic_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
thyperbolic_LDFLAGS =
thypot_SOURCES = thypot.c
thypot_OBJECTS = thypot$U.$(OBJEXT)
thypot_LDADD = $(LDADD)
thypot_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
thypot_LDFLAGS =
tisnan_SOURCES = tisnan.c
tisnan_OBJECTS = tisnan$U.$(OBJEXT)
tisnan_LDADD = $(LDADD)
tisnan_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tisnan_LDFLAGS =
tlog_SOURCES = tlog.c
tlog_OBJECTS = tlog$U.$(OBJEXT)
tlog_LDADD = $(LDADD)
tlog_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tlog_LDFLAGS =
tlog10_SOURCES = tlog10.c
tlog10_OBJECTS = tlog10$U.$(OBJEXT)
tlog10_LDADD = $(LDADD)
tlog10_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tlog10_LDFLAGS =
tlog1p_SOURCES = tlog1p.c
tlog1p_OBJECTS = tlog1p$U.$(OBJEXT)
tlog1p_LDADD = $(LDADD)
tlog1p_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tlog1p_LDFLAGS =
tlog2_SOURCES = tlog2.c
tlog2_OBJECTS = tlog2$U.$(OBJEXT)
tlog2_LDADD = $(LDADD)
tlog2_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tlog2_LDFLAGS =
tmul_SOURCES = tmul.c
tmul_OBJECTS = tmul$U.$(OBJEXT)
tmul_LDADD = $(LDADD)
tmul_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tmul_LDFLAGS =
tmul_2exp_SOURCES = tmul_2exp.c
tmul_2exp_OBJECTS = tmul_2exp$U.$(OBJEXT)
tmul_2exp_LDADD = $(LDADD)
tmul_2exp_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tmul_2exp_LDFLAGS =
tmul_ui_SOURCES = tmul_ui.c
tmul_ui_OBJECTS = tmul_ui$U.$(OBJEXT)
tmul_ui_LDADD = $(LDADD)
tmul_ui_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tmul_ui_LDFLAGS =
tout_str_SOURCES = tout_str.c
tout_str_OBJECTS = tout_str$U.$(OBJEXT)
tout_str_LDADD = $(LDADD)
tout_str_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tout_str_LDFLAGS =
tpow_SOURCES = tpow.c
tpow_OBJECTS = tpow$U.$(OBJEXT)
tpow_LDADD = $(LDADD)
tpow_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tpow_LDFLAGS =
tpow3_SOURCES = tpow3.c
tpow3_OBJECTS = tpow3$U.$(OBJEXT)
tpow3_LDADD = $(LDADD)
tpow3_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tpow3_LDFLAGS =
trandom_SOURCES = trandom.c
trandom_OBJECTS = trandom$U.$(OBJEXT)
trandom_LDADD = $(LDADD)
trandom_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
trandom_LDFLAGS =
trint_SOURCES = trint.c
trint_OBJECTS = trint$U.$(OBJEXT)
trint_LDADD = $(LDADD)
trint_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
trint_LDFLAGS =
tround_prec_SOURCES = tround_prec.c
tround_prec_OBJECTS = tround_prec$U.$(OBJEXT)
tround_prec_LDADD = $(LDADD)
tround_prec_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tround_prec_LDFLAGS =
tset_SOURCES = tset.c
tset_OBJECTS = tset$U.$(OBJEXT)
tset_LDADD = $(LDADD)
tset_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tset_LDFLAGS =
tset_d_SOURCES = tset_d.c
tset_d_OBJECTS = tset_d$U.$(OBJEXT)
tset_d_LDADD = $(LDADD)
tset_d_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tset_d_LDFLAGS =
tset_f_SOURCES = tset_f.c
tset_f_OBJECTS = tset_f$U.$(OBJEXT)
tset_f_LDADD = $(LDADD)
tset_f_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tset_f_LDFLAGS =
tset_ld_SOURCES = tset_ld.c
tset_ld_OBJECTS = tset_ld$U.$(OBJEXT)
tset_ld_LDADD = $(LDADD)
tset_ld_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tset_ld_LDFLAGS =
tset_q_SOURCES = tset_q.c
tset_q_OBJECTS = tset_q$U.$(OBJEXT)
tset_q_LDADD = $(LDADD)
tset_q_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tset_q_LDFLAGS =
tset_si_SOURCES = tset_si.c
tset_si_OBJECTS = tset_si$U.$(OBJEXT)
tset_si_LDADD = $(LDADD)
tset_si_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tset_si_LDFLAGS =
tset_str_SOURCES = tset_str.c
tset_str_OBJECTS = tset_str$U.$(OBJEXT)
tset_str_LDADD = $(LDADD)
tset_str_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tset_str_LDFLAGS =
tset_z_SOURCES = tset_z.c
tset_z_OBJECTS = tset_z$U.$(OBJEXT)
tset_z_LDADD = $(LDADD)
tset_z_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tset_z_LDFLAGS =
tsin_SOURCES = tsin.c
tsin_OBJECTS = tsin$U.$(OBJEXT)
tsin_LDADD = $(LDADD)
tsin_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tsin_LDFLAGS =
tsin_cos_SOURCES = tsin_cos.c
tsin_cos_OBJECTS = tsin_cos$U.$(OBJEXT)
tsin_cos_LDADD = $(LDADD)
tsin_cos_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tsin_cos_LDFLAGS =
tsinh_SOURCES = tsinh.c
tsinh_OBJECTS = tsinh$U.$(OBJEXT)
tsinh_LDADD = $(LDADD)
tsinh_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tsinh_LDFLAGS =
tsqrt_SOURCES = tsqrt.c
tsqrt_OBJECTS = tsqrt$U.$(OBJEXT)
tsqrt_LDADD = $(LDADD)
tsqrt_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tsqrt_LDFLAGS =
tsqrt_ui_SOURCES = tsqrt_ui.c
tsqrt_ui_OBJECTS = tsqrt_ui$U.$(OBJEXT)
tsqrt_ui_LDADD = $(LDADD)
tsqrt_ui_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tsqrt_ui_LDFLAGS =
tsub_SOURCES = tsub.c
tsub_OBJECTS = tsub$U.$(OBJEXT)
tsub_LDADD = $(LDADD)
tsub_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tsub_LDFLAGS =
tsub_ui_SOURCES = tsub_ui.c
tsub_ui_OBJECTS = tsub_ui$U.$(OBJEXT)
tsub_ui_LDADD = $(LDADD)
tsub_ui_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tsub_ui_LDFLAGS =
tswap_SOURCES = tswap.c
tswap_OBJECTS = tswap$U.$(OBJEXT)
tswap_LDADD = $(LDADD)
tswap_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tswap_LDFLAGS =
ttan_SOURCES = ttan.c
ttan_OBJECTS = ttan$U.$(OBJEXT)
ttan_LDADD = $(LDADD)
ttan_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
ttan_LDFLAGS =
ttanh_SOURCES = ttanh.c
ttanh_OBJECTS = ttanh$U.$(OBJEXT)
ttanh_LDADD = $(LDADD)
ttanh_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
ttanh_LDFLAGS =
ttrunc_SOURCES = ttrunc.c
ttrunc_OBJECTS = ttrunc$U.$(OBJEXT)
ttrunc_LDADD = $(LDADD)
ttrunc_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
ttrunc_LDFLAGS =
tui_div_SOURCES = tui_div.c
tui_div_OBJECTS = tui_div$U.$(OBJEXT)
tui_div_LDADD = $(LDADD)
tui_div_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tui_div_LDFLAGS =
tui_pow_SOURCES = tui_pow.c
tui_pow_OBJECTS = tui_pow$U.$(OBJEXT)
tui_pow_LDADD = $(LDADD)
tui_pow_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tui_pow_LDFLAGS =
tui_sub_SOURCES = tui_sub.c
tui_sub_OBJECTS = tui_sub$U.$(OBJEXT)
tui_sub_LDADD = $(LDADD)
tui_sub_DEPENDENCIES = libfrtests.a ../libmpfr.a \
	$(top_builddir)/libgmp.la
tui_sub_LDFLAGS =
tzeta_SOURCES = tzeta.c
tzeta_OBJECTS = tzeta$U.$(OBJEXT)
tzeta_LDADD = $(LDADD)
tzeta_DEPENDENCIES = libfrtests.a ../libmpfr.a $(top_builddir)/libgmp.la
tzeta_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libfrtests_a_SOURCES) $(EXTRA_libfrtests_a_SOURCES) \
	mpf_compat.c mpfr_compat.c reuse.c tabs.c tacos.c tacosh.c \
	tadd.c tadd_ui.c tagm.c tasin.c tasinh.c tatan.c tatanh.c \
	tcan_round.c tcbrt.c tcmp.c tcmp2.c tcmp_d.c tcmp_ui.c \
	tconst_euler.c tconst_log2.c tconst_pi.c tcos.c tcosh.c tdiv.c \
	tdiv_ui.c teq.c terf.c texceptions.c texp.c texp2.c texpm1.c \
	tfactorial.c tfma.c tfrac.c tgamma.c tget_d.c tget_str.c \
	thyperbolic.c thypot.c tisnan.c tlog.c tlog10.c tlog1p.c \
	tlog2.c tmul.c tmul_2exp.c tmul_ui.c tout_str.c tpow.c tpow3.c \
	trandom.c trint.c tround_prec.c tset.c tset_d.c tset_f.c \
	tset_ld.c tset_q.c tset_si.c tset_str.c tset_z.c tsin.c \
	tsin_cos.c tsinh.c tsqrt.c tsqrt_ui.c tsub.c tsub_ui.c tswap.c \
	ttan.c ttanh.c ttrunc.c tui_div.c tui_pow.c tui_sub.c tzeta.c
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(libfrtests_a_SOURCES) $(EXTRA_libfrtests_a_SOURCES) mpf_compat.c mpfr_compat.c reuse.c tabs.c tacos.c tacosh.c tadd.c tadd_ui.c tagm.c tasin.c tasinh.c tatan.c tatanh.c tcan_round.c tcbrt.c tcmp.c tcmp2.c tcmp_d.c tcmp_ui.c tconst_euler.c tconst_log2.c tconst_pi.c tcos.c tcosh.c tdiv.c tdiv_ui.c teq.c terf.c texceptions.c texp.c texp2.c texpm1.c tfactorial.c tfma.c tfrac.c tgamma.c tget_d.c tget_str.c thyperbolic.c thypot.c tisnan.c tlog.c tlog10.c tlog1p.c tlog2.c tmul.c tmul_2exp.c tmul_ui.c tout_str.c tpow.c tpow3.c trandom.c trint.c tround_prec.c tset.c tset_d.c tset_f.c tset_ld.c tset_q.c tset_si.c tset_str.c tset_z.c tsin.c tsin_cos.c tsinh.c tsqrt.c tsqrt_ui.c tsub.c tsub_ui.c tswap.c ttan.c ttanh.c ttrunc.c tui_div.c tui_pow.c tui_sub.c tzeta.c

all: all-am

.SUFFIXES:
.SUFFIXES: .asm .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  mpfr/tests/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-checkLIBRARIES:
	-test -z "$(check_LIBRARIES)" || rm -f $(check_LIBRARIES)
libfrtests.a: $(libfrtests_a_OBJECTS) $(libfrtests_a_DEPENDENCIES) 
	-rm -f libfrtests.a
	$(libfrtests_a_AR) libfrtests.a $(libfrtests_a_OBJECTS) $(libfrtests_a_LIBADD)
	$(RANLIB) libfrtests.a

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
mpf_compat$(EXEEXT): $(mpf_compat_OBJECTS) $(mpf_compat_DEPENDENCIES) 
	@rm -f mpf_compat$(EXEEXT)
	$(LINK) $(mpf_compat_LDFLAGS) $(mpf_compat_OBJECTS) $(mpf_compat_LDADD) $(LIBS)
mpfr_compat$(EXEEXT): $(mpfr_compat_OBJECTS) $(mpfr_compat_DEPENDENCIES) 
	@rm -f mpfr_compat$(EXEEXT)
	$(LINK) $(mpfr_compat_LDFLAGS) $(mpfr_compat_OBJECTS) $(mpfr_compat_LDADD) $(LIBS)
reuse$(EXEEXT): $(reuse_OBJECTS) $(reuse_DEPENDENCIES) 
	@rm -f reuse$(EXEEXT)
	$(LINK) $(reuse_LDFLAGS) $(reuse_OBJECTS) $(reuse_LDADD) $(LIBS)
tabs$(EXEEXT): $(tabs_OBJECTS) $(tabs_DEPENDENCIES) 
	@rm -f tabs$(EXEEXT)
	$(LINK) $(tabs_LDFLAGS) $(tabs_OBJECTS) $(tabs_LDADD) $(LIBS)
tacos$(EXEEXT): $(tacos_OBJECTS) $(tacos_DEPENDENCIES) 
	@rm -f tacos$(EXEEXT)
	$(LINK) $(tacos_LDFLAGS) $(tacos_OBJECTS) $(tacos_LDADD) $(LIBS)
tacosh$(EXEEXT): $(tacosh_OBJECTS) $(tacosh_DEPENDENCIES) 
	@rm -f tacosh$(EXEEXT)
	$(LINK) $(tacosh_LDFLAGS) $(tacosh_OBJECTS) $(tacosh_LDADD) $(LIBS)
tadd$(EXEEXT): $(tadd_OBJECTS) $(tadd_DEPENDENCIES) 
	@rm -f tadd$(EXEEXT)
	$(LINK) $(tadd_LDFLAGS) $(tadd_OBJECTS) $(tadd_LDADD) $(LIBS)
tadd_ui$(EXEEXT): $(tadd_ui_OBJECTS) $(tadd_ui_DEPENDENCIES) 
	@rm -f tadd_ui$(EXEEXT)
	$(LINK) $(tadd_ui_LDFLAGS) $(tadd_ui_OBJECTS) $(tadd_ui_LDADD) $(LIBS)
tagm$(EXEEXT): $(tagm_OBJECTS) $(tagm_DEPENDENCIES) 
	@rm -f tagm$(EXEEXT)
	$(LINK) $(tagm_LDFLAGS) $(tagm_OBJECTS) $(tagm_LDADD) $(LIBS)
tasin$(EXEEXT): $(tasin_OBJECTS) $(tasin_DEPENDENCIES) 
	@rm -f tasin$(EXEEXT)
	$(LINK) $(tasin_LDFLAGS) $(tasin_OBJECTS) $(tasin_LDADD) $(LIBS)
tasinh$(EXEEXT): $(tasinh_OBJECTS) $(tasinh_DEPENDENCIES) 
	@rm -f tasinh$(EXEEXT)
	$(LINK) $(tasinh_LDFLAGS) $(tasinh_OBJECTS) $(tasinh_LDADD) $(LIBS)
tatan$(EXEEXT): $(tatan_OBJECTS) $(tatan_DEPENDENCIES) 
	@rm -f tatan$(EXEEXT)
	$(LINK) $(tatan_LDFLAGS) $(tatan_OBJECTS) $(tatan_LDADD) $(LIBS)
tatanh$(EXEEXT): $(tatanh_OBJECTS) $(tatanh_DEPENDENCIES) 
	@rm -f tatanh$(EXEEXT)
	$(LINK) $(tatanh_LDFLAGS) $(tatanh_OBJECTS) $(tatanh_LDADD) $(LIBS)
tcan_round$(EXEEXT): $(tcan_round_OBJECTS) $(tcan_round_DEPENDENCIES) 
	@rm -f tcan_round$(EXEEXT)
	$(LINK) $(tcan_round_LDFLAGS) $(tcan_round_OBJECTS) $(tcan_round_LDADD) $(LIBS)
tcbrt$(EXEEXT): $(tcbrt_OBJECTS) $(tcbrt_DEPENDENCIES) 
	@rm -f tcbrt$(EXEEXT)
	$(LINK) $(tcbrt_LDFLAGS) $(tcbrt_OBJECTS) $(tcbrt_LDADD) $(LIBS)
tcmp$(EXEEXT): $(tcmp_OBJECTS) $(tcmp_DEPENDENCIES) 
	@rm -f tcmp$(EXEEXT)
	$(LINK) $(tcmp_LDFLAGS) $(tcmp_OBJECTS) $(tcmp_LDADD) $(LIBS)
tcmp2$(EXEEXT): $(tcmp2_OBJECTS) $(tcmp2_DEPENDENCIES) 
	@rm -f tcmp2$(EXEEXT)
	$(LINK) $(tcmp2_LDFLAGS) $(tcmp2_OBJECTS) $(tcmp2_LDADD) $(LIBS)
tcmp_d$(EXEEXT): $(tcmp_d_OBJECTS) $(tcmp_d_DEPENDENCIES) 
	@rm -f tcmp_d$(EXEEXT)
	$(LINK) $(tcmp_d_LDFLAGS) $(tcmp_d_OBJECTS) $(tcmp_d_LDADD) $(LIBS)
tcmp_ui$(EXEEXT): $(tcmp_ui_OBJECTS) $(tcmp_ui_DEPENDENCIES) 
	@rm -f tcmp_ui$(EXEEXT)
	$(LINK) $(tcmp_ui_LDFLAGS) $(tcmp_ui_OBJECTS) $(tcmp_ui_LDADD) $(LIBS)
tconst_euler$(EXEEXT): $(tconst_euler_OBJECTS) $(tconst_euler_DEPENDENCIES) 
	@rm -f tconst_euler$(EXEEXT)
	$(LINK) $(tconst_euler_LDFLAGS) $(tconst_euler_OBJECTS) $(tconst_euler_LDADD) $(LIBS)
tconst_log2$(EXEEXT): $(tconst_log2_OBJECTS) $(tconst_log2_DEPENDENCIES) 
	@rm -f tconst_log2$(EXEEXT)
	$(LINK) $(tconst_log2_LDFLAGS) $(tconst_log2_OBJECTS) $(tconst_log2_LDADD) $(LIBS)
tconst_pi$(EXEEXT): $(tconst_pi_OBJECTS) $(tconst_pi_DEPENDENCIES) 
	@rm -f tconst_pi$(EXEEXT)
	$(LINK) $(tconst_pi_LDFLAGS) $(tconst_pi_OBJECTS) $(tconst_pi_LDADD) $(LIBS)
tcos$(EXEEXT): $(tcos_OBJECTS) $(tcos_DEPENDENCIES) 
	@rm -f tcos$(EXEEXT)
	$(LINK) $(tcos_LDFLAGS) $(tcos_OBJECTS) $(tcos_LDADD) $(LIBS)
tcosh$(EXEEXT): $(tcosh_OBJECTS) $(tcosh_DEPENDENCIES) 
	@rm -f tcosh$(EXEEXT)
	$(LINK) $(tcosh_LDFLAGS) $(tcosh_OBJECTS) $(tcosh_LDADD) $(LIBS)
tdiv$(EXEEXT): $(tdiv_OBJECTS) $(tdiv_DEPENDENCIES) 
	@rm -f tdiv$(EXEEXT)
	$(LINK) $(tdiv_LDFLAGS) $(tdiv_OBJECTS) $(tdiv_LDADD) $(LIBS)
tdiv_ui$(EXEEXT): $(tdiv_ui_OBJECTS) $(tdiv_ui_DEPENDENCIES) 
	@rm -f tdiv_ui$(EXEEXT)
	$(LINK) $(tdiv_ui_LDFLAGS) $(tdiv_ui_OBJECTS) $(tdiv_ui_LDADD) $(LIBS)
teq$(EXEEXT): $(teq_OBJECTS) $(teq_DEPENDENCIES) 
	@rm -f teq$(EXEEXT)
	$(LINK) $(teq_LDFLAGS) $(teq_OBJECTS) $(teq_LDADD) $(LIBS)
terf$(EXEEXT): $(terf_OBJECTS) $(terf_DEPENDENCIES) 
	@rm -f terf$(EXEEXT)
	$(LINK) $(terf_LDFLAGS) $(terf_OBJECTS) $(terf_LDADD) $(LIBS)
texceptions$(EXEEXT): $(texceptions_OBJECTS) $(texceptions_DEPENDENCIES) 
	@rm -f texceptions$(EXEEXT)
	$(LINK) $(texceptions_LDFLAGS) $(texceptions_OBJECTS) $(texceptions_LDADD) $(LIBS)
texp$(EXEEXT): $(texp_OBJECTS) $(texp_DEPENDENCIES) 
	@rm -f texp$(EXEEXT)
	$(LINK) $(texp_LDFLAGS) $(texp_OBJECTS) $(texp_LDADD) $(LIBS)
texp2$(EXEEXT): $(texp2_OBJECTS) $(texp2_DEPENDENCIES) 
	@rm -f texp2$(EXEEXT)
	$(LINK) $(texp2_LDFLAGS) $(texp2_OBJECTS) $(texp2_LDADD) $(LIBS)
texpm1$(EXEEXT): $(texpm1_OBJECTS) $(texpm1_DEPENDENCIES) 
	@rm -f texpm1$(EXEEXT)
	$(LINK) $(texpm1_LDFLAGS) $(texpm1_OBJECTS) $(texpm1_LDADD) $(LIBS)
tfactorial$(EXEEXT): $(tfactorial_OBJECTS) $(tfactorial_DEPENDENCIES) 
	@rm -f tfactorial$(EXEEXT)
	$(LINK) $(tfactorial_LDFLAGS) $(tfactorial_OBJECTS) $(tfactorial_LDADD) $(LIBS)
tfma$(EXEEXT): $(tfma_OBJECTS) $(tfma_DEPENDENCIES) 
	@rm -f tfma$(EXEEXT)
	$(LINK) $(tfma_LDFLAGS) $(tfma_OBJECTS) $(tfma_LDADD) $(LIBS)
tfrac$(EXEEXT): $(tfrac_OBJECTS) $(tfrac_DEPENDENCIES) 
	@rm -f tfrac$(EXEEXT)
	$(LINK) $(tfrac_LDFLAGS) $(tfrac_OBJECTS) $(tfrac_LDADD) $(LIBS)
tgamma$(EXEEXT): $(tgamma_OBJECTS) $(tgamma_DEPENDENCIES) 
	@rm -f tgamma$(EXEEXT)
	$(LINK) $(tgamma_LDFLAGS) $(tgamma_OBJECTS) $(tgamma_LDADD) $(LIBS)
tget_d$(EXEEXT): $(tget_d_OBJECTS) $(tget_d_DEPENDENCIES) 
	@rm -f tget_d$(EXEEXT)
	$(LINK) $(tget_d_LDFLAGS) $(tget_d_OBJECTS) $(tget_d_LDADD) $(LIBS)
tget_str$(EXEEXT): $(tget_str_OBJECTS) $(tget_str_DEPENDENCIES) 
	@rm -f tget_str$(EXEEXT)
	$(LINK) $(tget_str_LDFLAGS) $(tget_str_OBJECTS) $(tget_str_LDADD) $(LIBS)
thyperbolic$(EXEEXT): $(thyperbolic_OBJECTS) $(thyperbolic_DEPENDENCIES) 
	@rm -f thyperbolic$(EXEEXT)
	$(LINK) $(thyperbolic_LDFLAGS) $(thyperbolic_OBJECTS) $(thyperbolic_LDADD) $(LIBS)
thypot$(EXEEXT): $(thypot_OBJECTS) $(thypot_DEPENDENCIES) 
	@rm -f thypot$(EXEEXT)
	$(LINK) $(thypot_LDFLAGS) $(thypot_OBJECTS) $(thypot_LDADD) $(LIBS)
tisnan$(EXEEXT): $(tisnan_OBJECTS) $(tisnan_DEPENDENCIES) 
	@rm -f tisnan$(EXEEXT)
	$(LINK) $(tisnan_LDFLAGS) $(tisnan_OBJECTS) $(tisnan_LDADD) $(LIBS)
tlog$(EXEEXT): $(tlog_OBJECTS) $(tlog_DEPENDENCIES) 
	@rm -f tlog$(EXEEXT)
	$(LINK) $(tlog_LDFLAGS) $(tlog_OBJECTS) $(tlog_LDADD) $(LIBS)
tlog10$(EXEEXT): $(tlog10_OBJECTS) $(tlog10_DEPENDENCIES) 
	@rm -f tlog10$(EXEEXT)
	$(LINK) $(tlog10_LDFLAGS) $(tlog10_OBJECTS) $(tlog10_LDADD) $(LIBS)
tlog1p$(EXEEXT): $(tlog1p_OBJECTS) $(tlog1p_DEPENDENCIES) 
	@rm -f tlog1p$(EXEEXT)
	$(LINK) $(tlog1p_LDFLAGS) $(tlog1p_OBJECTS) $(tlog1p_LDADD) $(LIBS)
tlog2$(EXEEXT): $(tlog2_OBJECTS) $(tlog2_DEPENDENCIES) 
	@rm -f tlog2$(EXEEXT)
	$(LINK) $(tlog2_LDFLAGS) $(tlog2_OBJECTS) $(tlog2_LDADD) $(LIBS)
tmul$(EXEEXT): $(tmul_OBJECTS) $(tmul_DEPENDENCIES) 
	@rm -f tmul$(EXEEXT)
	$(LINK) $(tmul_LDFLAGS) $(tmul_OBJECTS) $(tmul_LDADD) $(LIBS)
tmul_2exp$(EXEEXT): $(tmul_2exp_OBJECTS) $(tmul_2exp_DEPENDENCIES) 
	@rm -f tmul_2exp$(EXEEXT)
	$(LINK) $(tmul_2exp_LDFLAGS) $(tmul_2exp_OBJECTS) $(tmul_2exp_LDADD) $(LIBS)
tmul_ui$(EXEEXT): $(tmul_ui_OBJECTS) $(tmul_ui_DEPENDENCIES) 
	@rm -f tmul_ui$(EXEEXT)
	$(LINK) $(tmul_ui_LDFLAGS) $(tmul_ui_OBJECTS) $(tmul_ui_LDADD) $(LIBS)
tout_str$(EXEEXT): $(tout_str_OBJECTS) $(tout_str_DEPENDENCIES) 
	@rm -f tout_str$(EXEEXT)
	$(LINK) $(tout_str_LDFLAGS) $(tout_str_OBJECTS) $(tout_str_LDADD) $(LIBS)
tpow$(EXEEXT): $(tpow_OBJECTS) $(tpow_DEPENDENCIES) 
	@rm -f tpow$(EXEEXT)
	$(LINK) $(tpow_LDFLAGS) $(tpow_OBJECTS) $(tpow_LDADD) $(LIBS)
tpow3$(EXEEXT): $(tpow3_OBJECTS) $(tpow3_DEPENDENCIES) 
	@rm -f tpow3$(EXEEXT)
	$(LINK) $(tpow3_LDFLAGS) $(tpow3_OBJECTS) $(tpow3_LDADD) $(LIBS)
trandom$(EXEEXT): $(trandom_OBJECTS) $(trandom_DEPENDENCIES) 
	@rm -f trandom$(EXEEXT)
	$(LINK) $(trandom_LDFLAGS) $(trandom_OBJECTS) $(trandom_LDADD) $(LIBS)
trint$(EXEEXT): $(trint_OBJECTS) $(trint_DEPENDENCIES) 
	@rm -f trint$(EXEEXT)
	$(LINK) $(trint_LDFLAGS) $(trint_OBJECTS) $(trint_LDADD) $(LIBS)
tround_prec$(EXEEXT): $(tround_prec_OBJECTS) $(tround_prec_DEPENDENCIES) 
	@rm -f tround_prec$(EXEEXT)
	$(LINK) $(tround_prec_LDFLAGS) $(tround_prec_OBJECTS) $(tround_prec_LDADD) $(LIBS)
tset$(EXEEXT): $(tset_OBJECTS) $(tset_DEPENDENCIES) 
	@rm -f tset$(EXEEXT)
	$(LINK) $(tset_LDFLAGS) $(tset_OBJECTS) $(tset_LDADD) $(LIBS)
tset_d$(EXEEXT): $(tset_d_OBJECTS) $(tset_d_DEPENDENCIES) 
	@rm -f tset_d$(EXEEXT)
	$(LINK) $(tset_d_LDFLAGS) $(tset_d_OBJECTS) $(tset_d_LDADD) $(LIBS)
tset_f$(EXEEXT): $(tset_f_OBJECTS) $(tset_f_DEPENDENCIES) 
	@rm -f tset_f$(EXEEXT)
	$(LINK) $(tset_f_LDFLAGS) $(tset_f_OBJECTS) $(tset_f_LDADD) $(LIBS)
tset_ld$(EXEEXT): $(tset_ld_OBJECTS) $(tset_ld_DEPENDENCIES) 
	@rm -f tset_ld$(EXEEXT)
	$(LINK) $(tset_ld_LDFLAGS) $(tset_ld_OBJECTS) $(tset_ld_LDADD) $(LIBS)
tset_q$(EXEEXT): $(tset_q_OBJECTS) $(tset_q_DEPENDENCIES) 
	@rm -f tset_q$(EXEEXT)
	$(LINK) $(tset_q_LDFLAGS) $(tset_q_OBJECTS) $(tset_q_LDADD) $(LIBS)
tset_si$(EXEEXT): $(tset_si_OBJECTS) $(tset_si_DEPENDENCIES) 
	@rm -f tset_si$(EXEEXT)
	$(LINK) $(tset_si_LDFLAGS) $(tset_si_OBJECTS) $(tset_si_LDADD) $(LIBS)
tset_str$(EXEEXT): $(tset_str_OBJECTS) $(tset_str_DEPENDENCIES) 
	@rm -f tset_str$(EXEEXT)
	$(LINK) $(tset_str_LDFLAGS) $(tset_str_OBJECTS) $(tset_str_LDADD) $(LIBS)
tset_z$(EXEEXT): $(tset_z_OBJECTS) $(tset_z_DEPENDENCIES) 
	@rm -f tset_z$(EXEEXT)
	$(LINK) $(tset_z_LDFLAGS) $(tset_z_OBJECTS) $(tset_z_LDADD) $(LIBS)
tsin$(EXEEXT): $(tsin_OBJECTS) $(tsin_DEPENDENCIES) 
	@rm -f tsin$(EXEEXT)
	$(LINK) $(tsin_LDFLAGS) $(tsin_OBJECTS) $(tsin_LDADD) $(LIBS)
tsin_cos$(EXEEXT): $(tsin_cos_OBJECTS) $(tsin_cos_DEPENDENCIES) 
	@rm -f tsin_cos$(EXEEXT)
	$(LINK) $(tsin_cos_LDFLAGS) $(tsin_cos_OBJECTS) $(tsin_cos_LDADD) $(LIBS)
tsinh$(EXEEXT): $(tsinh_OBJECTS) $(tsinh_DEPENDENCIES) 
	@rm -f tsinh$(EXEEXT)
	$(LINK) $(tsinh_LDFLAGS) $(tsinh_OBJECTS) $(tsinh_LDADD) $(LIBS)
tsqrt$(EXEEXT): $(tsqrt_OBJECTS) $(tsqrt_DEPENDENCIES) 
	@rm -f tsqrt$(EXEEXT)
	$(LINK) $(tsqrt_LDFLAGS) $(tsqrt_OBJECTS) $(tsqrt_LDADD) $(LIBS)
tsqrt_ui$(EXEEXT): $(tsqrt_ui_OBJECTS) $(tsqrt_ui_DEPENDENCIES) 
	@rm -f tsqrt_ui$(EXEEXT)
	$(LINK) $(tsqrt_ui_LDFLAGS) $(tsqrt_ui_OBJECTS) $(tsqrt_ui_LDADD) $(LIBS)
tsub$(EXEEXT): $(tsub_OBJECTS) $(tsub_DEPENDENCIES) 
	@rm -f tsub$(EXEEXT)
	$(LINK) $(tsub_LDFLAGS) $(tsub_OBJECTS) $(tsub_LDADD) $(LIBS)
tsub_ui$(EXEEXT): $(tsub_ui_OBJECTS) $(tsub_ui_DEPENDENCIES) 
	@rm -f tsub_ui$(EXEEXT)
	$(LINK) $(tsub_ui_LDFLAGS) $(tsub_ui_OBJECTS) $(tsub_ui_LDADD) $(LIBS)
tswap$(EXEEXT): $(tswap_OBJECTS) $(tswap_DEPENDENCIES) 
	@rm -f tswap$(EXEEXT)
	$(LINK) $(tswap_LDFLAGS) $(tswap_OBJECTS) $(tswap_LDADD) $(LIBS)
ttan$(EXEEXT): $(ttan_OBJECTS) $(ttan_DEPENDENCIES) 
	@rm -f ttan$(EXEEXT)
	$(LINK) $(ttan_LDFLAGS) $(ttan_OBJECTS) $(ttan_LDADD) $(LIBS)
ttanh$(EXEEXT): $(ttanh_OBJECTS) $(ttanh_DEPENDENCIES) 
	@rm -f ttanh$(EXEEXT)
	$(LINK) $(ttanh_LDFLAGS) $(ttanh_OBJECTS) $(ttanh_LDADD) $(LIBS)
ttrunc$(EXEEXT): $(ttrunc_OBJECTS) $(ttrunc_DEPENDENCIES) 
	@rm -f ttrunc$(EXEEXT)
	$(LINK) $(ttrunc_LDFLAGS) $(ttrunc_OBJECTS) $(ttrunc_LDADD) $(LIBS)
tui_div$(EXEEXT): $(tui_div_OBJECTS) $(tui_div_DEPENDENCIES) 
	@rm -f tui_div$(EXEEXT)
	$(LINK) $(tui_div_LDFLAGS) $(tui_div_OBJECTS) $(tui_div_LDADD) $(LIBS)
tui_pow$(EXEEXT): $(tui_pow_OBJECTS) $(tui_pow_DEPENDENCIES) 
	@rm -f tui_pow$(EXEEXT)
	$(LINK) $(tui_pow_LDFLAGS) $(tui_pow_OBJECTS) $(tui_pow_LDADD) $(LIBS)
tui_sub$(EXEEXT): $(tui_sub_OBJECTS) $(tui_sub_DEPENDENCIES) 
	@rm -f tui_sub$(EXEEXT)
	$(LINK) $(tui_sub_LDFLAGS) $(tui_sub_OBJECTS) $(tui_sub_LDADD) $(LIBS)
tzeta$(EXEEXT): $(tzeta_OBJECTS) $(tzeta_DEPENDENCIES) 
	@rm -f tzeta$(EXEEXT)
	$(LINK) $(tzeta_LDFLAGS) $(tzeta_OBJECTS) $(tzeta_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

ANSI2KNR = $(top_builddir)/ansi2knr
$(top_builddir)/ansi2knr:
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) ansi2knr

mostlyclean-kr:
	-test "$U" = "" || rm -f *_.c

.c.o:
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.c.lo:
	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
memory_.c: memory.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/memory.c; then echo $(srcdir)/memory.c; else echo memory.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
mpf_compat_.c: mpf_compat.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/mpf_compat.c; then echo $(srcdir)/mpf_compat.c; else echo mpf_compat.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
mpfr_compat_.c: mpfr_compat.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/mpfr_compat.c; then echo $(srcdir)/mpfr_compat.c; else echo mpfr_compat.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
reuse_.c: reuse.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/reuse.c; then echo $(srcdir)/reuse.c; else echo reuse.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
rnd_mode_.c: rnd_mode.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/rnd_mode.c; then echo $(srcdir)/rnd_mode.c; else echo rnd_mode.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tabs_.c: tabs.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tabs.c; then echo $(srcdir)/tabs.c; else echo tabs.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tacos_.c: tacos.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tacos.c; then echo $(srcdir)/tacos.c; else echo tacos.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tacosh_.c: tacosh.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tacosh.c; then echo $(srcdir)/tacosh.c; else echo tacosh.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tadd_.c: tadd.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tadd.c; then echo $(srcdir)/tadd.c; else echo tadd.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tadd_ui_.c: tadd_ui.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tadd_ui.c; then echo $(srcdir)/tadd_ui.c; else echo tadd_ui.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tagm_.c: tagm.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tagm.c; then echo $(srcdir)/tagm.c; else echo tagm.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tasin_.c: tasin.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tasin.c; then echo $(srcdir)/tasin.c; else echo tasin.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tasinh_.c: tasinh.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tasinh.c; then echo $(srcdir)/tasinh.c; else echo tasinh.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tatan_.c: tatan.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tatan.c; then echo $(srcdir)/tatan.c; else echo tatan.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tatanh_.c: tatanh.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tatanh.c; then echo $(srcdir)/tatanh.c; else echo tatanh.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcan_round_.c: tcan_round.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcan_round.c; then echo $(srcdir)/tcan_round.c; else echo tcan_round.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcbrt_.c: tcbrt.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcbrt.c; then echo $(srcdir)/tcbrt.c; else echo tcbrt.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcmp_.c: tcmp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcmp.c; then echo $(srcdir)/tcmp.c; else echo tcmp.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcmp2_.c: tcmp2.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcmp2.c; then echo $(srcdir)/tcmp2.c; else echo tcmp2.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcmp_d_.c: tcmp_d.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcmp_d.c; then echo $(srcdir)/tcmp_d.c; else echo tcmp_d.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcmp_ui_.c: tcmp_ui.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcmp_ui.c; then echo $(srcdir)/tcmp_ui.c; else echo tcmp_ui.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tconst_euler_.c: tconst_euler.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tconst_euler.c; then echo $(srcdir)/tconst_euler.c; else echo tconst_euler.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tconst_log2_.c: tconst_log2.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tconst_log2.c; then echo $(srcdir)/tconst_log2.c; else echo tconst_log2.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tconst_pi_.c: tconst_pi.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tconst_pi.c; then echo $(srcdir)/tconst_pi.c; else echo tconst_pi.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcos_.c: tcos.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcos.c; then echo $(srcdir)/tcos.c; else echo tcos.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcosh_.c: tcosh.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcosh.c; then echo $(srcdir)/tcosh.c; else echo tcosh.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tdiv_.c: tdiv.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tdiv.c; then echo $(srcdir)/tdiv.c; else echo tdiv.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tdiv_ui_.c: tdiv_ui.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tdiv_ui.c; then echo $(srcdir)/tdiv_ui.c; else echo tdiv_ui.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
teq_.c: teq.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/teq.c; then echo $(srcdir)/teq.c; else echo teq.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
terf_.c: terf.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/terf.c; then echo $(srcdir)/terf.c; else echo terf.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tests_.c: tests.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tests.c; then echo $(srcdir)/tests.c; else echo tests.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
texceptions_.c: texceptions.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/texceptions.c; then echo $(srcdir)/texceptions.c; else echo texceptions.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
texp_.c: texp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/texp.c; then echo $(srcdir)/texp.c; else echo texp.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
texp2_.c: texp2.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/texp2.c; then echo $(srcdir)/texp2.c; else echo texp2.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
texpm1_.c: texpm1.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/texpm1.c; then echo $(srcdir)/texpm1.c; else echo texpm1.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tfactorial_.c: tfactorial.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tfactorial.c; then echo $(srcdir)/tfactorial.c; else echo tfactorial.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tfma_.c: tfma.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tfma.c; then echo $(srcdir)/tfma.c; else echo tfma.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tfrac_.c: tfrac.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tfrac.c; then echo $(srcdir)/tfrac.c; else echo tfrac.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tgamma_.c: tgamma.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tgamma.c; then echo $(srcdir)/tgamma.c; else echo tgamma.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tget_d_.c: tget_d.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tget_d.c; then echo $(srcdir)/tget_d.c; else echo tget_d.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tget_str_.c: tget_str.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tget_str.c; then echo $(srcdir)/tget_str.c; else echo tget_str.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
thyperbolic_.c: thyperbolic.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/thyperbolic.c; then echo $(srcdir)/thyperbolic.c; else echo thyperbolic.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
thypot_.c: thypot.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/thypot.c; then echo $(srcdir)/thypot.c; else echo thypot.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tisnan_.c: tisnan.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tisnan.c; then echo $(srcdir)/tisnan.c; else echo tisnan.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tlog_.c: tlog.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tlog.c; then echo $(srcdir)/tlog.c; else echo tlog.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tlog10_.c: tlog10.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tlog10.c; then echo $(srcdir)/tlog10.c; else echo tlog10.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tlog1p_.c: tlog1p.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tlog1p.c; then echo $(srcdir)/tlog1p.c; else echo tlog1p.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tlog2_.c: tlog2.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tlog2.c; then echo $(srcdir)/tlog2.c; else echo tlog2.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tmul_.c: tmul.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tmul.c; then echo $(srcdir)/tmul.c; else echo tmul.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tmul_2exp_.c: tmul_2exp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tmul_2exp.c; then echo $(srcdir)/tmul_2exp.c; else echo tmul_2exp.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tmul_ui_.c: tmul_ui.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tmul_ui.c; then echo $(srcdir)/tmul_ui.c; else echo tmul_ui.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tout_str_.c: tout_str.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tout_str.c; then echo $(srcdir)/tout_str.c; else echo tout_str.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tpow_.c: tpow.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tpow.c; then echo $(srcdir)/tpow.c; else echo tpow.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tpow3_.c: tpow3.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tpow3.c; then echo $(srcdir)/tpow3.c; else echo tpow3.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
trandom_.c: trandom.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/trandom.c; then echo $(srcdir)/trandom.c; else echo trandom.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
trint_.c: trint.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/trint.c; then echo $(srcdir)/trint.c; else echo trint.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tround_prec_.c: tround_prec.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tround_prec.c; then echo $(srcdir)/tround_prec.c; else echo tround_prec.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_.c: tset.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset.c; then echo $(srcdir)/tset.c; else echo tset.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_d_.c: tset_d.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_d.c; then echo $(srcdir)/tset_d.c; else echo tset_d.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_f_.c: tset_f.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_f.c; then echo $(srcdir)/tset_f.c; else echo tset_f.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_ld_.c: tset_ld.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_ld.c; then echo $(srcdir)/tset_ld.c; else echo tset_ld.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_q_.c: tset_q.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_q.c; then echo $(srcdir)/tset_q.c; else echo tset_q.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_si_.c: tset_si.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_si.c; then echo $(srcdir)/tset_si.c; else echo tset_si.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_str_.c: tset_str.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_str.c; then echo $(srcdir)/tset_str.c; else echo tset_str.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_z_.c: tset_z.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_z.c; then echo $(srcdir)/tset_z.c; else echo tset_z.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsin_.c: tsin.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsin.c; then echo $(srcdir)/tsin.c; else echo tsin.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsin_cos_.c: tsin_cos.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsin_cos.c; then echo $(srcdir)/tsin_cos.c; else echo tsin_cos.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsinh_.c: tsinh.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsinh.c; then echo $(srcdir)/tsinh.c; else echo tsinh.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsqrt_.c: tsqrt.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsqrt.c; then echo $(srcdir)/tsqrt.c; else echo tsqrt.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsqrt_ui_.c: tsqrt_ui.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsqrt_ui.c; then echo $(srcdir)/tsqrt_ui.c; else echo tsqrt_ui.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsub_.c: tsub.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsub.c; then echo $(srcdir)/tsub.c; else echo tsub.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsub_ui_.c: tsub_ui.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsub_ui.c; then echo $(srcdir)/tsub_ui.c; else echo tsub_ui.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tswap_.c: tswap.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tswap.c; then echo $(srcdir)/tswap.c; else echo tswap.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
ttan_.c: ttan.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/ttan.c; then echo $(srcdir)/ttan.c; else echo ttan.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
ttanh_.c: ttanh.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/ttanh.c; then echo $(srcdir)/ttanh.c; else echo ttanh.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
ttrunc_.c: ttrunc.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/ttrunc.c; then echo $(srcdir)/ttrunc.c; else echo ttrunc.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tui_div_.c: tui_div.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tui_div.c; then echo $(srcdir)/tui_div.c; else echo tui_div.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tui_pow_.c: tui_pow.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tui_pow.c; then echo $(srcdir)/tui_pow.c; else echo tui_pow.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tui_sub_.c: tui_sub.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tui_sub.c; then echo $(srcdir)/tui_sub.c; else echo tui_sub.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tzeta_.c: tzeta.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tzeta.c; then echo $(srcdir)/tzeta.c; else echo tzeta.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
memory_.$(OBJEXT) memory_.lo mpf_compat_.$(OBJEXT) mpf_compat_.lo \
mpfr_compat_.$(OBJEXT) mpfr_compat_.lo reuse_.$(OBJEXT) reuse_.lo \
rnd_mode_.$(OBJEXT) rnd_mode_.lo tabs_.$(OBJEXT) tabs_.lo \
tacos_.$(OBJEXT) tacos_.lo tacosh_.$(OBJEXT) tacosh_.lo tadd_.$(OBJEXT) \
tadd_.lo tadd_ui_.$(OBJEXT) tadd_ui_.lo tagm_.$(OBJEXT) tagm_.lo \
tasin_.$(OBJEXT) tasin_.lo tasinh_.$(OBJEXT) tasinh_.lo \
tatan_.$(OBJEXT) tatan_.lo tatanh_.$(OBJEXT) tatanh_.lo \
tcan_round_.$(OBJEXT) tcan_round_.lo tcbrt_.$(OBJEXT) tcbrt_.lo \
tcmp_.$(OBJEXT) tcmp_.lo tcmp2_.$(OBJEXT) tcmp2_.lo tcmp_d_.$(OBJEXT) \
tcmp_d_.lo tcmp_ui_.$(OBJEXT) tcmp_ui_.lo tconst_euler_.$(OBJEXT) \
tconst_euler_.lo tconst_log2_.$(OBJEXT) tconst_log2_.lo \
tconst_pi_.$(OBJEXT) tconst_pi_.lo tcos_.$(OBJEXT) tcos_.lo \
tcosh_.$(OBJEXT) tcosh_.lo tdiv_.$(OBJEXT) tdiv_.lo tdiv_ui_.$(OBJEXT) \
tdiv_ui_.lo teq_.$(OBJEXT) teq_.lo terf_.$(OBJEXT) terf_.lo \
tests_.$(OBJEXT) tests_.lo texceptions_.$(OBJEXT) texceptions_.lo \
texp_.$(OBJEXT) texp_.lo texp2_.$(OBJEXT) texp2_.lo texpm1_.$(OBJEXT) \
texpm1_.lo tfactorial_.$(OBJEXT) tfactorial_.lo tfma_.$(OBJEXT) \
tfma_.lo tfrac_.$(OBJEXT) tfrac_.lo tgamma_.$(OBJEXT) tgamma_.lo \
tget_d_.$(OBJEXT) tget_d_.lo tget_str_.$(OBJEXT) tget_str_.lo \
thyperbolic_.$(OBJEXT) thyperbolic_.lo thypot_.$(OBJEXT) thypot_.lo \
tisnan_.$(OBJEXT) tisnan_.lo tlog_.$(OBJEXT) tlog_.lo tlog10_.$(OBJEXT) \
tlog10_.lo tlog1p_.$(OBJEXT) tlog1p_.lo tlog2_.$(OBJEXT) tlog2_.lo \
tmul_.$(OBJEXT) tmul_.lo tmul_2exp_.$(OBJEXT) tmul_2exp_.lo \
tmul_ui_.$(OBJEXT) tmul_ui_.lo tout_str_.$(OBJEXT) tout_str_.lo \
tpow_.$(OBJEXT) tpow_.lo tpow3_.$(OBJEXT) tpow3_.lo trandom_.$(OBJEXT) \
trandom_.lo trint_.$(OBJEXT) trint_.lo tround_prec_.$(OBJEXT) \
tround_prec_.lo tset_.$(OBJEXT) tset_.lo tset_d_.$(OBJEXT) tset_d_.lo \
tset_f_.$(OBJEXT) tset_f_.lo tset_ld_.$(OBJEXT) tset_ld_.lo \
tset_q_.$(OBJEXT) tset_q_.lo tset_si_.$(OBJEXT) tset_si_.lo \
tset_str_.$(OBJEXT) tset_str_.lo tset_z_.$(OBJEXT) tset_z_.lo \
tsin_.$(OBJEXT) tsin_.lo tsin_cos_.$(OBJEXT) tsin_cos_.lo \
tsinh_.$(OBJEXT) tsinh_.lo tsqrt_.$(OBJEXT) tsqrt_.lo \
tsqrt_ui_.$(OBJEXT) tsqrt_ui_.lo tsub_.$(OBJEXT) tsub_.lo \
tsub_ui_.$(OBJEXT) tsub_ui_.lo tswap_.$(OBJEXT) tswap_.lo \
ttan_.$(OBJEXT) ttan_.lo ttanh_.$(OBJEXT) ttanh_.lo ttrunc_.$(OBJEXT) \
ttrunc_.lo tui_div_.$(OBJEXT) tui_div_.lo tui_pow_.$(OBJEXT) \
tui_pow_.lo tui_sub_.$(OBJEXT) tui_sub_.lo tzeta_.$(OBJEXT) tzeta_.lo : \
$(ANSI2KNR)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xpass=`expr $$xpass + 1`; \
	        failed=`expr $$failed + 1`; \
	        echo "XPASS: $$tst"; \
	      ;; \
	      *) \
	        echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xfail=`expr $$xfail + 1`; \
	        echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
	        failed=`expr $$failed + 1`; \
	        echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -gt `echo "$$banner" | wc -c` && \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -gt `echo "$$banner" | wc -c` && \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -n "$$skipped" && echo "$$skipped"; \
	  test -n "$$report" && echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_LIBRARIES) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic mostlyclean-kr \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-kr mostlyclean-libtool pdf \
	pdf-am ps ps-am tags uninstall uninstall-am uninstall-info-am


../libmpfr.a:
	cd ..; make libmpfr.a  
.asm.o:
	grep -v '^#' `test -f '$<' || echo '$(srcdir)/'`$< >tmp-$*.s
	$(COMPILE) -c tmp-$*.s -o $@
	rm -f tmp-$*.s
.asm.obj:
	grep -v '^#' `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<' >tmp-$*.s
	$(COMPILE) -c tmp-$*.s -o $@
	rm -f tmp-$*.s
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
