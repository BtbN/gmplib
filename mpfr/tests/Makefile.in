# Makefile.in generated automatically by automake 1.4a from Makefile.am

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_FLAG =
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

@SET_MAKE@
host_alias = @host_alias@
host_triplet = @host@
AMDEP = @AMDEP@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
ASMFLAGS_PIC = @ASMFLAGS_PIC@
AWK = @AWK@
CALLING_CONVENTIONS_OBJS = @CALLING_CONVENTIONS_OBJS@
CC = @CC@
CCAS = @CCAS@
CFLAGS_PIC = @CFLAGS_PIC@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EXEEXT = @EXEEXT@
GMP_LDFLAGS = @GMP_LDFLAGS@
LIBM = @LIBM@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
M4 = @M4@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
SPEED_CYCLECOUNTER_OBJ = @SPEED_CYCLECOUNTER_OBJ@
STRIP = @STRIP@
TUNE_SQR_OBJ = @TUNE_SQR_OBJ@
U = @U@
VERSION = @VERSION@
WANT_MPFR_VAL = @WANT_MPFR_VAL@
gmp_srclinks = @gmp_srclinks@
install_sh = @install_sh@
mpn_objects = @mpn_objects@
mpn_objs_in_libgmp = @mpn_objs_in_libgmp@

# Copyright 2000, 2001 Free Software Foundation, Inc.
#
# This file is part of the GNU MP Library.
#
# The GNU MP Library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Library General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# The GNU MP Library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
# License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with the GNU MP Library; see the file COPYING.LIB.  If not, write to
# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
# MA 02111-1307, USA.


AUTOMAKE_OPTIONS = gnu no-dependencies

INCLUDES = -I$(top_srcdir) -I$(top_srcdir)/mpfr
LDADD = ../libmpfr.a $(top_builddir)/libgmp.la $(LIBM)

@WANT_MPFR_TRUE@check_PROGRAMS = @WANT_MPFR_TRUE@reuse tabs tadd tagm tcan_round tcmp tcmp2 tcmp_ui tdiv tdiv_ui tdump teq texp tget_str tlog tlog2 tmul tmul_2exp tmul_ui tout_str tpi tpow trandom tround tset_d tset_f tset_q tset_si tset_str tset_z tsqrt tsqrt_ui tui_div tui_sub tsin_cos tswap ttrunc
@WANT_MPFR_TRUE@TESTS = @WANT_MPFR_TRUE@$(check_PROGRAMS)
subdir = mpfr/tests
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../../config.h
CONFIG_CLEAN_FILES = 
@WANT_MPFR_TRUE@check_PROGRAMS =  reuse$(EXEEXT) tabs$(EXEEXT) \
@WANT_MPFR_TRUE@tadd$(EXEEXT) tagm$(EXEEXT) tcan_round$(EXEEXT) \
@WANT_MPFR_TRUE@tcmp$(EXEEXT) tcmp2$(EXEEXT) tcmp_ui$(EXEEXT) \
@WANT_MPFR_TRUE@tdiv$(EXEEXT) tdiv_ui$(EXEEXT) tdump$(EXEEXT) \
@WANT_MPFR_TRUE@teq$(EXEEXT) texp$(EXEEXT) tget_str$(EXEEXT) \
@WANT_MPFR_TRUE@tlog$(EXEEXT) tlog2$(EXEEXT) tmul$(EXEEXT) \
@WANT_MPFR_TRUE@tmul_2exp$(EXEEXT) tmul_ui$(EXEEXT) tout_str$(EXEEXT) \
@WANT_MPFR_TRUE@tpi$(EXEEXT) tpow$(EXEEXT) trandom$(EXEEXT) \
@WANT_MPFR_TRUE@tround$(EXEEXT) tset_d$(EXEEXT) tset_f$(EXEEXT) \
@WANT_MPFR_TRUE@tset_q$(EXEEXT) tset_si$(EXEEXT) tset_str$(EXEEXT) \
@WANT_MPFR_TRUE@tset_z$(EXEEXT) tsqrt$(EXEEXT) tsqrt_ui$(EXEEXT) \
@WANT_MPFR_TRUE@tui_div$(EXEEXT) tui_sub$(EXEEXT) tsin_cos$(EXEEXT) \
@WANT_MPFR_TRUE@tswap$(EXEEXT) ttrunc$(EXEEXT)

DEFS = @DEFS@ -I. -I$(srcdir) -I../..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
reuse_SOURCES = reuse.c
reuse_OBJECTS =  reuse.$(OBJEXT)
reuse_LDADD = $(LDADD)
reuse_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
reuse_LDFLAGS = 
tabs_SOURCES = tabs.c
tabs_OBJECTS =  tabs.$(OBJEXT)
tabs_LDADD = $(LDADD)
tabs_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tabs_LDFLAGS = 
tadd_SOURCES = tadd.c
tadd_OBJECTS =  tadd.$(OBJEXT)
tadd_LDADD = $(LDADD)
tadd_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tadd_LDFLAGS = 
tagm_SOURCES = tagm.c
tagm_OBJECTS =  tagm.$(OBJEXT)
tagm_LDADD = $(LDADD)
tagm_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tagm_LDFLAGS = 
tcan_round_SOURCES = tcan_round.c
tcan_round_OBJECTS =  tcan_round.$(OBJEXT)
tcan_round_LDADD = $(LDADD)
tcan_round_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tcan_round_LDFLAGS = 
tcmp_SOURCES = tcmp.c
tcmp_OBJECTS =  tcmp.$(OBJEXT)
tcmp_LDADD = $(LDADD)
tcmp_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tcmp_LDFLAGS = 
tcmp2_SOURCES = tcmp2.c
tcmp2_OBJECTS =  tcmp2.$(OBJEXT)
tcmp2_LDADD = $(LDADD)
tcmp2_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tcmp2_LDFLAGS = 
tcmp_ui_SOURCES = tcmp_ui.c
tcmp_ui_OBJECTS =  tcmp_ui.$(OBJEXT)
tcmp_ui_LDADD = $(LDADD)
tcmp_ui_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tcmp_ui_LDFLAGS = 
tdiv_SOURCES = tdiv.c
tdiv_OBJECTS =  tdiv.$(OBJEXT)
tdiv_LDADD = $(LDADD)
tdiv_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tdiv_LDFLAGS = 
tdiv_ui_SOURCES = tdiv_ui.c
tdiv_ui_OBJECTS =  tdiv_ui.$(OBJEXT)
tdiv_ui_LDADD = $(LDADD)
tdiv_ui_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tdiv_ui_LDFLAGS = 
tdump_SOURCES = tdump.c
tdump_OBJECTS =  tdump.$(OBJEXT)
tdump_LDADD = $(LDADD)
tdump_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tdump_LDFLAGS = 
teq_SOURCES = teq.c
teq_OBJECTS =  teq.$(OBJEXT)
teq_LDADD = $(LDADD)
teq_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
teq_LDFLAGS = 
texp_SOURCES = texp.c
texp_OBJECTS =  texp.$(OBJEXT)
texp_LDADD = $(LDADD)
texp_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
texp_LDFLAGS = 
tget_str_SOURCES = tget_str.c
tget_str_OBJECTS =  tget_str.$(OBJEXT)
tget_str_LDADD = $(LDADD)
tget_str_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tget_str_LDFLAGS = 
tlog_SOURCES = tlog.c
tlog_OBJECTS =  tlog.$(OBJEXT)
tlog_LDADD = $(LDADD)
tlog_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tlog_LDFLAGS = 
tlog2_SOURCES = tlog2.c
tlog2_OBJECTS =  tlog2.$(OBJEXT)
tlog2_LDADD = $(LDADD)
tlog2_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tlog2_LDFLAGS = 
tmul_SOURCES = tmul.c
tmul_OBJECTS =  tmul.$(OBJEXT)
tmul_LDADD = $(LDADD)
tmul_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tmul_LDFLAGS = 
tmul_2exp_SOURCES = tmul_2exp.c
tmul_2exp_OBJECTS =  tmul_2exp.$(OBJEXT)
tmul_2exp_LDADD = $(LDADD)
tmul_2exp_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tmul_2exp_LDFLAGS = 
tmul_ui_SOURCES = tmul_ui.c
tmul_ui_OBJECTS =  tmul_ui.$(OBJEXT)
tmul_ui_LDADD = $(LDADD)
tmul_ui_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tmul_ui_LDFLAGS = 
tout_str_SOURCES = tout_str.c
tout_str_OBJECTS =  tout_str.$(OBJEXT)
tout_str_LDADD = $(LDADD)
tout_str_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tout_str_LDFLAGS = 
tpi_SOURCES = tpi.c
tpi_OBJECTS =  tpi.$(OBJEXT)
tpi_LDADD = $(LDADD)
tpi_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tpi_LDFLAGS = 
tpow_SOURCES = tpow.c
tpow_OBJECTS =  tpow.$(OBJEXT)
tpow_LDADD = $(LDADD)
tpow_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tpow_LDFLAGS = 
trandom_SOURCES = trandom.c
trandom_OBJECTS =  trandom.$(OBJEXT)
trandom_LDADD = $(LDADD)
trandom_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
trandom_LDFLAGS = 
tround_SOURCES = tround.c
tround_OBJECTS =  tround.$(OBJEXT)
tround_LDADD = $(LDADD)
tround_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tround_LDFLAGS = 
tset_d_SOURCES = tset_d.c
tset_d_OBJECTS =  tset_d.$(OBJEXT)
tset_d_LDADD = $(LDADD)
tset_d_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tset_d_LDFLAGS = 
tset_f_SOURCES = tset_f.c
tset_f_OBJECTS =  tset_f.$(OBJEXT)
tset_f_LDADD = $(LDADD)
tset_f_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tset_f_LDFLAGS = 
tset_q_SOURCES = tset_q.c
tset_q_OBJECTS =  tset_q.$(OBJEXT)
tset_q_LDADD = $(LDADD)
tset_q_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tset_q_LDFLAGS = 
tset_si_SOURCES = tset_si.c
tset_si_OBJECTS =  tset_si.$(OBJEXT)
tset_si_LDADD = $(LDADD)
tset_si_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tset_si_LDFLAGS = 
tset_str_SOURCES = tset_str.c
tset_str_OBJECTS =  tset_str.$(OBJEXT)
tset_str_LDADD = $(LDADD)
tset_str_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tset_str_LDFLAGS = 
tset_z_SOURCES = tset_z.c
tset_z_OBJECTS =  tset_z.$(OBJEXT)
tset_z_LDADD = $(LDADD)
tset_z_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tset_z_LDFLAGS = 
tsin_cos_SOURCES = tsin_cos.c
tsin_cos_OBJECTS =  tsin_cos.$(OBJEXT)
tsin_cos_LDADD = $(LDADD)
tsin_cos_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tsin_cos_LDFLAGS = 
tsqrt_SOURCES = tsqrt.c
tsqrt_OBJECTS =  tsqrt.$(OBJEXT)
tsqrt_LDADD = $(LDADD)
tsqrt_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tsqrt_LDFLAGS = 
tsqrt_ui_SOURCES = tsqrt_ui.c
tsqrt_ui_OBJECTS =  tsqrt_ui.$(OBJEXT)
tsqrt_ui_LDADD = $(LDADD)
tsqrt_ui_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tsqrt_ui_LDFLAGS = 
tswap_SOURCES = tswap.c
tswap_OBJECTS =  tswap.$(OBJEXT)
tswap_LDADD = $(LDADD)
tswap_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tswap_LDFLAGS = 
ttrunc_SOURCES = ttrunc.c
ttrunc_OBJECTS =  ttrunc.$(OBJEXT)
ttrunc_LDADD = $(LDADD)
ttrunc_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
ttrunc_LDFLAGS = 
tui_div_SOURCES = tui_div.c
tui_div_OBJECTS =  tui_div.$(OBJEXT)
tui_div_LDADD = $(LDADD)
tui_div_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tui_div_LDFLAGS = 
tui_sub_SOURCES = tui_sub.c
tui_sub_OBJECTS =  tui_sub.$(OBJEXT)
tui_sub_LDADD = $(LDADD)
tui_sub_DEPENDENCIES =  ../libmpfr.a $(top_builddir)/libgmp.la
tui_sub_LDFLAGS = 
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CFLAGS = @CFLAGS@
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES =  reuse.c tabs.c tadd.c tagm.c tcan_round.c tcmp.c tcmp2.c \
tcmp_ui.c tdiv.c tdiv_ui.c tdump.c teq.c texp.c tget_str.c tlog.c \
tlog2.c tmul.c tmul_2exp.c tmul_ui.c tout_str.c tpi.c tpow.c trandom.c \
tround.c tset_d.c tset_f.c tset_q.c tset_si.c tset_str.c tset_z.c \
tsin_cos.c tsqrt.c tsqrt_ui.c tswap.c ttrunc.c tui_div.c tui_sub.c
depcomp = 
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

GZIP_ENV = --best
SOURCES = reuse.c tabs.c tadd.c tagm.c tcan_round.c tcmp.c tcmp2.c tcmp_ui.c tdiv.c tdiv_ui.c tdump.c teq.c texp.c tget_str.c tlog.c tlog2.c tmul.c tmul_2exp.c tmul_ui.c tout_str.c tpi.c tpow.c trandom.c tround.c tset_d.c tset_f.c tset_q.c tset_si.c tset_str.c tset_z.c tsin_cos.c tsqrt.c tsqrt_ui.c tswap.c ttrunc.c tui_div.c tui_sub.c
OBJECTS = reuse.$(OBJEXT) tabs.$(OBJEXT) tadd.$(OBJEXT) tagm.$(OBJEXT) tcan_round.$(OBJEXT) tcmp.$(OBJEXT) tcmp2.$(OBJEXT) tcmp_ui.$(OBJEXT) tdiv.$(OBJEXT) tdiv_ui.$(OBJEXT) tdump.$(OBJEXT) teq.$(OBJEXT) texp.$(OBJEXT) tget_str.$(OBJEXT) tlog.$(OBJEXT) tlog2.$(OBJEXT) tmul.$(OBJEXT) tmul_2exp.$(OBJEXT) tmul_ui.$(OBJEXT) tout_str.$(OBJEXT) tpi.$(OBJEXT) tpow.$(OBJEXT) trandom.$(OBJEXT) tround.$(OBJEXT) tset_d.$(OBJEXT) tset_f.$(OBJEXT) tset_q.$(OBJEXT) tset_si.$(OBJEXT) tset_str.$(OBJEXT) tset_z.$(OBJEXT) tsin_cos.$(OBJEXT) tsqrt.$(OBJEXT) tsqrt_ui.$(OBJEXT) tswap.$(OBJEXT) ttrunc.$(OBJEXT) tui_div.$(OBJEXT) tui_sub.$(OBJEXT)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu mpfr/tests/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-checkPROGRAMS:

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)

distclean-checkPROGRAMS:

maintainer-clean-checkPROGRAMS:

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

reuse$(EXEEXT): $(reuse_OBJECTS) $(reuse_DEPENDENCIES)
	@rm -f reuse$(EXEEXT)
	$(LINK) $(reuse_LDFLAGS) $(reuse_OBJECTS) $(reuse_LDADD) $(LIBS)

tabs$(EXEEXT): $(tabs_OBJECTS) $(tabs_DEPENDENCIES)
	@rm -f tabs$(EXEEXT)
	$(LINK) $(tabs_LDFLAGS) $(tabs_OBJECTS) $(tabs_LDADD) $(LIBS)

tadd$(EXEEXT): $(tadd_OBJECTS) $(tadd_DEPENDENCIES)
	@rm -f tadd$(EXEEXT)
	$(LINK) $(tadd_LDFLAGS) $(tadd_OBJECTS) $(tadd_LDADD) $(LIBS)

tagm$(EXEEXT): $(tagm_OBJECTS) $(tagm_DEPENDENCIES)
	@rm -f tagm$(EXEEXT)
	$(LINK) $(tagm_LDFLAGS) $(tagm_OBJECTS) $(tagm_LDADD) $(LIBS)

tcan_round$(EXEEXT): $(tcan_round_OBJECTS) $(tcan_round_DEPENDENCIES)
	@rm -f tcan_round$(EXEEXT)
	$(LINK) $(tcan_round_LDFLAGS) $(tcan_round_OBJECTS) $(tcan_round_LDADD) $(LIBS)

tcmp$(EXEEXT): $(tcmp_OBJECTS) $(tcmp_DEPENDENCIES)
	@rm -f tcmp$(EXEEXT)
	$(LINK) $(tcmp_LDFLAGS) $(tcmp_OBJECTS) $(tcmp_LDADD) $(LIBS)

tcmp2$(EXEEXT): $(tcmp2_OBJECTS) $(tcmp2_DEPENDENCIES)
	@rm -f tcmp2$(EXEEXT)
	$(LINK) $(tcmp2_LDFLAGS) $(tcmp2_OBJECTS) $(tcmp2_LDADD) $(LIBS)

tcmp_ui$(EXEEXT): $(tcmp_ui_OBJECTS) $(tcmp_ui_DEPENDENCIES)
	@rm -f tcmp_ui$(EXEEXT)
	$(LINK) $(tcmp_ui_LDFLAGS) $(tcmp_ui_OBJECTS) $(tcmp_ui_LDADD) $(LIBS)

tdiv$(EXEEXT): $(tdiv_OBJECTS) $(tdiv_DEPENDENCIES)
	@rm -f tdiv$(EXEEXT)
	$(LINK) $(tdiv_LDFLAGS) $(tdiv_OBJECTS) $(tdiv_LDADD) $(LIBS)

tdiv_ui$(EXEEXT): $(tdiv_ui_OBJECTS) $(tdiv_ui_DEPENDENCIES)
	@rm -f tdiv_ui$(EXEEXT)
	$(LINK) $(tdiv_ui_LDFLAGS) $(tdiv_ui_OBJECTS) $(tdiv_ui_LDADD) $(LIBS)

tdump$(EXEEXT): $(tdump_OBJECTS) $(tdump_DEPENDENCIES)
	@rm -f tdump$(EXEEXT)
	$(LINK) $(tdump_LDFLAGS) $(tdump_OBJECTS) $(tdump_LDADD) $(LIBS)

teq$(EXEEXT): $(teq_OBJECTS) $(teq_DEPENDENCIES)
	@rm -f teq$(EXEEXT)
	$(LINK) $(teq_LDFLAGS) $(teq_OBJECTS) $(teq_LDADD) $(LIBS)

texp$(EXEEXT): $(texp_OBJECTS) $(texp_DEPENDENCIES)
	@rm -f texp$(EXEEXT)
	$(LINK) $(texp_LDFLAGS) $(texp_OBJECTS) $(texp_LDADD) $(LIBS)

tget_str$(EXEEXT): $(tget_str_OBJECTS) $(tget_str_DEPENDENCIES)
	@rm -f tget_str$(EXEEXT)
	$(LINK) $(tget_str_LDFLAGS) $(tget_str_OBJECTS) $(tget_str_LDADD) $(LIBS)

tlog$(EXEEXT): $(tlog_OBJECTS) $(tlog_DEPENDENCIES)
	@rm -f tlog$(EXEEXT)
	$(LINK) $(tlog_LDFLAGS) $(tlog_OBJECTS) $(tlog_LDADD) $(LIBS)

tlog2$(EXEEXT): $(tlog2_OBJECTS) $(tlog2_DEPENDENCIES)
	@rm -f tlog2$(EXEEXT)
	$(LINK) $(tlog2_LDFLAGS) $(tlog2_OBJECTS) $(tlog2_LDADD) $(LIBS)

tmul$(EXEEXT): $(tmul_OBJECTS) $(tmul_DEPENDENCIES)
	@rm -f tmul$(EXEEXT)
	$(LINK) $(tmul_LDFLAGS) $(tmul_OBJECTS) $(tmul_LDADD) $(LIBS)

tmul_2exp$(EXEEXT): $(tmul_2exp_OBJECTS) $(tmul_2exp_DEPENDENCIES)
	@rm -f tmul_2exp$(EXEEXT)
	$(LINK) $(tmul_2exp_LDFLAGS) $(tmul_2exp_OBJECTS) $(tmul_2exp_LDADD) $(LIBS)

tmul_ui$(EXEEXT): $(tmul_ui_OBJECTS) $(tmul_ui_DEPENDENCIES)
	@rm -f tmul_ui$(EXEEXT)
	$(LINK) $(tmul_ui_LDFLAGS) $(tmul_ui_OBJECTS) $(tmul_ui_LDADD) $(LIBS)

tout_str$(EXEEXT): $(tout_str_OBJECTS) $(tout_str_DEPENDENCIES)
	@rm -f tout_str$(EXEEXT)
	$(LINK) $(tout_str_LDFLAGS) $(tout_str_OBJECTS) $(tout_str_LDADD) $(LIBS)

tpi$(EXEEXT): $(tpi_OBJECTS) $(tpi_DEPENDENCIES)
	@rm -f tpi$(EXEEXT)
	$(LINK) $(tpi_LDFLAGS) $(tpi_OBJECTS) $(tpi_LDADD) $(LIBS)

tpow$(EXEEXT): $(tpow_OBJECTS) $(tpow_DEPENDENCIES)
	@rm -f tpow$(EXEEXT)
	$(LINK) $(tpow_LDFLAGS) $(tpow_OBJECTS) $(tpow_LDADD) $(LIBS)

trandom$(EXEEXT): $(trandom_OBJECTS) $(trandom_DEPENDENCIES)
	@rm -f trandom$(EXEEXT)
	$(LINK) $(trandom_LDFLAGS) $(trandom_OBJECTS) $(trandom_LDADD) $(LIBS)

tround$(EXEEXT): $(tround_OBJECTS) $(tround_DEPENDENCIES)
	@rm -f tround$(EXEEXT)
	$(LINK) $(tround_LDFLAGS) $(tround_OBJECTS) $(tround_LDADD) $(LIBS)

tset_d$(EXEEXT): $(tset_d_OBJECTS) $(tset_d_DEPENDENCIES)
	@rm -f tset_d$(EXEEXT)
	$(LINK) $(tset_d_LDFLAGS) $(tset_d_OBJECTS) $(tset_d_LDADD) $(LIBS)

tset_f$(EXEEXT): $(tset_f_OBJECTS) $(tset_f_DEPENDENCIES)
	@rm -f tset_f$(EXEEXT)
	$(LINK) $(tset_f_LDFLAGS) $(tset_f_OBJECTS) $(tset_f_LDADD) $(LIBS)

tset_q$(EXEEXT): $(tset_q_OBJECTS) $(tset_q_DEPENDENCIES)
	@rm -f tset_q$(EXEEXT)
	$(LINK) $(tset_q_LDFLAGS) $(tset_q_OBJECTS) $(tset_q_LDADD) $(LIBS)

tset_si$(EXEEXT): $(tset_si_OBJECTS) $(tset_si_DEPENDENCIES)
	@rm -f tset_si$(EXEEXT)
	$(LINK) $(tset_si_LDFLAGS) $(tset_si_OBJECTS) $(tset_si_LDADD) $(LIBS)

tset_str$(EXEEXT): $(tset_str_OBJECTS) $(tset_str_DEPENDENCIES)
	@rm -f tset_str$(EXEEXT)
	$(LINK) $(tset_str_LDFLAGS) $(tset_str_OBJECTS) $(tset_str_LDADD) $(LIBS)

tset_z$(EXEEXT): $(tset_z_OBJECTS) $(tset_z_DEPENDENCIES)
	@rm -f tset_z$(EXEEXT)
	$(LINK) $(tset_z_LDFLAGS) $(tset_z_OBJECTS) $(tset_z_LDADD) $(LIBS)

tsin_cos$(EXEEXT): $(tsin_cos_OBJECTS) $(tsin_cos_DEPENDENCIES)
	@rm -f tsin_cos$(EXEEXT)
	$(LINK) $(tsin_cos_LDFLAGS) $(tsin_cos_OBJECTS) $(tsin_cos_LDADD) $(LIBS)

tsqrt$(EXEEXT): $(tsqrt_OBJECTS) $(tsqrt_DEPENDENCIES)
	@rm -f tsqrt$(EXEEXT)
	$(LINK) $(tsqrt_LDFLAGS) $(tsqrt_OBJECTS) $(tsqrt_LDADD) $(LIBS)

tsqrt_ui$(EXEEXT): $(tsqrt_ui_OBJECTS) $(tsqrt_ui_DEPENDENCIES)
	@rm -f tsqrt_ui$(EXEEXT)
	$(LINK) $(tsqrt_ui_LDFLAGS) $(tsqrt_ui_OBJECTS) $(tsqrt_ui_LDADD) $(LIBS)

tswap$(EXEEXT): $(tswap_OBJECTS) $(tswap_DEPENDENCIES)
	@rm -f tswap$(EXEEXT)
	$(LINK) $(tswap_LDFLAGS) $(tswap_OBJECTS) $(tswap_LDADD) $(LIBS)

ttrunc$(EXEEXT): $(ttrunc_OBJECTS) $(ttrunc_DEPENDENCIES)
	@rm -f ttrunc$(EXEEXT)
	$(LINK) $(ttrunc_LDFLAGS) $(ttrunc_OBJECTS) $(ttrunc_LDADD) $(LIBS)

tui_div$(EXEEXT): $(tui_div_OBJECTS) $(tui_div_DEPENDENCIES)
	@rm -f tui_div$(EXEEXT)
	$(LINK) $(tui_div_LDFLAGS) $(tui_div_OBJECTS) $(tui_div_LDADD) $(LIBS)

tui_sub$(EXEEXT): $(tui_sub_OBJECTS) $(tui_sub_DEPENDENCIES)
	@rm -f tui_sub$(EXEEXT)
	$(LINK) $(tui_sub_LDFLAGS) $(tui_sub_OBJECTS) $(tui_sub_LDADD) $(LIBS)
.c.o:
	$(COMPILE) -c $<
.c.obj:
	$(COMPILE) -c `cygpath -w $<`
.c.lo:
	$(LTCOMPILE) -c -o $@ $<

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || etags $(ETAGS_ARGS) $$tags  $$unique $(LISP)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:
check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xpass=`expr $$xpass + 1`; \
	        failed=`expr $$failed + 1`; \
	        echo "XPASS: $$tst"; \
	      ;; \
	      *) \
	        echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xfail=`expr $$xfail + 1`; \
	        echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
	        failed=`expr $$failed + 1`; \
	        echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes=`echo "$$banner" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	fi

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pR $$d/$$file $(distdir) \
	    || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am:
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am:
uninstall: uninstall-am
all-am: Makefile
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_STRIP_FLAG=-s install
installdirs:


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-rm -f Makefile.in
mostlyclean-am:  mostlyclean-checkPROGRAMS mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-checkPROGRAMS clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-checkPROGRAMS distclean-compile \
		distclean-libtool distclean-tags distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-checkPROGRAMS \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-checkPROGRAMS distclean-checkPROGRAMS \
clean-checkPROGRAMS maintainer-clean-checkPROGRAMS mostlyclean-compile \
distclean-compile clean-compile maintainer-clean-compile \
mostlyclean-libtool distclean-libtool clean-libtool \
maintainer-clean-libtool tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags check-TESTS distdir info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-am install-data install-am install \
uninstall-am uninstall all-redirect all-am all install-strip \
installdirs mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


../libmpfr.a:
	cd $(top_srcdir)/mpfr; make libmpfr.a  

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
