## Automake asm file rules.

# Copyright 1996, 1998, 1999, 2000 Free Software Foundation, Inc.
#
# This file is part of the GNU MP Library.
#
# The GNU MP Library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or (at your
# option) any later version.
#
# The GNU MP Library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
# License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with the GNU MP Library; see the file COPYING.LIB.  If not, write to
# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
# MA 02111-1307, USA.


# COMPILE minus CC.
# FIXME: Really pass *_CFLAGS to CPP?

COMPILE_FLAGS =	\
	$(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)


SUFFIXES = .s .S .asm


# *.s not preprocessed at all.
.s.o:
	$(CCAS) $(COMPILE_FLAGS) $<
.s.obj:
	$(CCAS) $(COMPILE_FLAGS) `cygpath -w $<`
.s.lo:
	$(LIBTOOL) --mode=compile $(CCAS) $(COMPILE_FLAGS) $<


# can be overridden during development, eg. "make RM_TMP=: mul_1.lo"
RM_TMP = rm -f


# Notice .S.lo and .asm.lo both have the creation of the .lo file last, so a
# re-make won't find a .lo unless all the commands succeeded.
#
# $(LIBTOOL) used to be used rather than $(CC) $(CFLAGS_PIC), but that fails
# on FreeBSD 2.2.8 where gas 1.92.3 requires -k to process PIC constructs
# like "@GOT".  With libtool the PIC .s was assembled (via gcc) once with -k
# and an unnecessary second time without, the latter failing.
#
# FIXME: .S.lo and .asm.lo create both a PIC .lo and a non-PIC .o, even if
# only one of the two is required.  Hopefully this won't cause any problems,
# it can't be too bad because it's been so in GMP since version 3.0.  It'd
# be nice if libtool could support assembler code directly.

# *.S preprocessed with cpp.
.S.o:
	$(CPP) $(COMPILE_FLAGS) $< | grep -v '^#' >tmp-$*.s
	$(CCAS) $(COMPILE_FLAGS) tmp-$*.s -o $@
	$(RM_TMP) tmp-$*.s
.S.obj:
	$(CPP) $(COMPILE_FLAGS) `cygpath -w $<` | grep -v '^#' >tmp-$*.s
	$(CCAS) $(COMPILE_FLAGS) tmp-$*.s -o $@
	$(RM_TMP) tmp-$*.s

.S.lo:
	$(CPP) $(COMPILE_FLAGS) $(ASMFLAGS_PIC) $< | grep -v '^#' >tmp-$*.s
	$(CCAS) $(COMPILE_FLAGS) tmp-$*.s -o tmp-$*.o
	$(CPP) $(COMPILE_FLAGS) $< | grep -v '^#' >tmp-$*.s
	$(CCAS) $(COMPILE_FLAGS) tmp-$*.s -o $*.o
	$(RM_TMP) tmp-$*.s
	mv tmp-$*.o $*.lo

# *.asm preprocessed with m4.
.asm.o:
	$(M4) -DOPERATION_$* $< >tmp-$*.s
	$(CCAS) $(COMPILE_FLAGS) tmp-$*.s -o $@
	$(RM_TMP) tmp-$*.s
.asm.obj:
	$(M4) -DOPERATION_$* `cygpath -w $<` >tmp-$*.s
	$(CCAS) $(COMPILE_FLAGS) tmp-$*.s -o $@
	$(RM_TMP) tmp-$*.s
.asm.lo:
	$(M4) $(ASMFLAGS_PIC) -DOPERATION_$* $< >tmp-$*.s
	$(CCAS) $(COMPILE_FLAGS) $(CFLAGS_PIC) tmp-$*.s -o tmp-$*.o
	$(M4) -DOPERATION_$* $< >tmp-$*.s
	$(CCAS) $(COMPILE_FLAGS) tmp-$*.s -o $*.o
	$(RM_TMP) tmp-$*.s
	mv tmp-$*.o $*.lo
