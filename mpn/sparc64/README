This directory contains mpn functions for 64-bit V9 SPARC

RELEVANT OPTIMIZATION ISSUES

The Ultra I/II pipeline executes up to two simple integer arithmetic operations
per cycle.  The 64-bit integer multiply instruction mulx takes from 5 cycles to
35 cycles, depending on the position of the most significant bit of the 1st
source operand.  It cannot overlap with other instructions.  For our use of
mulx, it will take from 5 to 20 cycles.

Integer conditional move instructions cannot dual-issue with other integer
instructions.  No conditional move can issue 1-5 cycles after a load.  (Or
something such bizzare.)

Integer branches can issue with two integer arithmetic instructions.  Likewise
for integer loads.  Four instructions may issue (arith, arith, ld/st, branch)
but only if the branch is last.

(The V9 architecture manual recommends that the 2nd operand of a multiply
instruction be the smaller one.  For UltraSPARC, they got things backwards and
optimize for the wrong operand!  Really helpful in the light of that multiply
is incredibly slow on these CPUs!)

STATUS

Timings on UltraSPARC-1/2:

* lshift, rshift: The code is well-optimized and runs at 2.0 cycles/limb.

* add_n, sub_n: currently runs at 5 cycles/limb.  Not very fast, but
  probably optimal.

* mul_1/addmul_1/submul_1: The used method is within 2x from what would be
  attainable by the 21-bit chunk split method.

